module add --name=org.apache.derby --resources=${env.DERBY_HOME}\lib\derbyclient.jar;${env.DERBY_HOME}\lib\derbyshared.jar;${env.DERBY_HOME}\lib\derbytools.jar --dependencies=javax.api
/subsystem=datasources/jdbc-driver=org.apache.derby:add(driver-name="org.apache.derby",driver-module-name="org.apache.derby",driver-datasource-class-name="org.apache.derby.jdbc.ClientConnectionPoolDataSource")
/subsystem=datasources/data-source=tradistaDS:add(connection-url="jdbc:derby://${env.DB_HOST}:${env.DB_PORT}/Tradista;create=true",driver-name="org.apache.derby",enabled=true,jta=true,use-ccm=false,background-validation=false,validate-on-match=false,jndi-name="java:/TradistaDataSource",share-prepared-statements=false,initial-pool-size="10",min-pool-size="10",max-pool-size="50")
/subsystem=datasources/data-source=tradistaDSNonManagedTX:add(connection-url="jdbc:derby://${env.DB_HOST}:${env.DB_PORT}/Tradista;create=true",driver-name="org.apache.derby",enabled=true,jta=false,use-ccm=false,background-validation=false,validate-on-match=false,jndi-name="java:/TradistaDataSourceNonManagedTX",share-prepared-statements=false,,initial-pool-size="10",min-pool-size="10",max-pool-size="50")
/subsystem=elytron/jdbc-realm=tradistaDbRealm:add(principal-query=[{sql="SELECT password FROM tradista_user WHERE login=?",data-source=tradistaDS,clear-password-mapper={password-index=1}}])
/subsystem=elytron/security-domain=tradistaDbSD:add(realms=[{realm=tradistaDbRealm,role-decoder=groups-to-roles}],default-realm=tradistaDbRealm,permission-mapper=default-permission-mapper)
/subsystem=ejb3/application-security-domain=other:write-attribute(name=security-domain,value=tradistaDbSD)
/subsystem=elytron/sasl-authentication-factory=tradista-sasl-auth:add(sasl-server-factory=global,security-domain=tradistaDbSD,mechanism-configurations=[{mechanism-name=PLAIN,mechanism-realm-configurations=[{realm-name=tradistaDbRealm}]}])
/subsystem=elytron/authentication-configuration=TradistaAuthenticationConfiguration:add(sasl-mechanism-selector=PLAIN,authentication-name=${env.SERVICE_ACCOUNT},credential-reference={clear-text=${env.SERVICE_ACCOUNT_PASSWORD}})
/subsystem=elytron/authentication-context=TradistaAuthenticationContext:add(match-rules=[{match-host=ALL,authentication-configuration=TradistaAuthenticationConfiguration}])
/subsystem=remoting/http-connector=http-remoting-connector:write-attribute(name=sasl-authentication-factory,value=tradista-sasl-auth)
/subsystem=remoting/http-connector=http-remoting-connector:undefine-attribute(name=security-realm)
/subsystem=messaging-activemq/server=default/jms-queue=CashInventoryQueue:add(entries=["java:/jms/queue/CashInventoryQueue"])
/subsystem=messaging-activemq/server=default/jms-queue=ProductInventoryQueue:add(entries=["java:/jms/queue/ProductInventoryQueue"])
/subsystem=messaging-activemq/server=default/jms-queue=TransferQueue:add(entries=["java:/jms/queue/TransferQueue"])